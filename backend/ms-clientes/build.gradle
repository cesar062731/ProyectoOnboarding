plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sayen.onboarding'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'	
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // O la versión que necesites
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1' // O la versión que necesites
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1' // O la versión que necesites
	 // Si necesitas la API de Servlet
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0' // O la versión compatible con tu Tomcat
    // Si necesitas Bean Validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // O la versión que necesites
	
}

tasks.named('test') {
	useJUnitPlatform()
}
